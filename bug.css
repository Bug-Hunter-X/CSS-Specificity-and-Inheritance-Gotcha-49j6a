The following CSS code snippet demonstrates an uncommon error related to specificity and inheritance:

```css
.parent {
  color: blue;
}

.child {
  color: red !important;
}

.child .grandchild {
  color: green;
}
```

In this example, the `grandchild` element inherits the `color: red !important` from its parent, `.child`. However, the `color: green` declaration in the `.child .grandchild` selector is overridden by `!important` in the parent selector. This can lead to unexpected results because specificity rules and the cascading nature of CSS might not be intuitively clear.

Another issue that frequently leads to unexpected behavior is the usage of `!important` flags excessively or without a clear understanding of the cascade and specificity. Overuse can hinder maintainability and make debugging more difficult.